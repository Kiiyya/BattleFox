//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "bfacp_users_soldiers")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: u32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub player_id: u32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_playerdata::Entity",
        from = "Column::PlayerId",
        to = "super::tbl_playerdata::Column::PlayerId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TblPlayerdata,
    #[sea_orm(
        belongs_to = "super::bfacp_users::Entity",
        from = "Column::UserId",
        to = "super::bfacp_users::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    BfacpUsers,
}

impl Related<super::tbl_playerdata::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblPlayerdata.def()
    }
}

impl Related<super::bfacp_users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BfacpUsers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
