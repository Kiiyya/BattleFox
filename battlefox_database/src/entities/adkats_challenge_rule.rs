//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "adkats_challenge_rule")]
pub struct Model {
    #[sea_orm(column_name = "ID", primary_key)]
    pub id: u32,
    #[sea_orm(column_name = "ServerID")]
    pub server_id: u16,
    #[sea_orm(column_name = "DefID")]
    pub def_id: u32,
    #[sea_orm(column_name = "Enabled")]
    pub enabled: u32,
    #[sea_orm(column_name = "Name")]
    pub name: String,
    #[sea_orm(column_name = "Tier")]
    pub tier: u32,
    #[sea_orm(column_name = "CompletionType")]
    pub completion_type: String,
    #[sea_orm(column_name = "RoundCount")]
    pub round_count: u32,
    #[sea_orm(column_name = "DurationMinutes")]
    pub duration_minutes: u32,
    #[sea_orm(column_name = "DeathCount")]
    pub death_count: u32,
    #[sea_orm(column_name = "CreateTime")]
    pub create_time: DateTime,
    #[sea_orm(column_name = "ModifyTime")]
    pub modify_time: DateTime,
    #[sea_orm(column_name = "RoundLastUsedTime")]
    pub round_last_used_time: DateTime,
    #[sea_orm(column_name = "PersonalLastUsedTime")]
    pub personal_last_used_time: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::adkats_challenge_definition::Entity",
        from = "Column::DefId",
        to = "super::adkats_challenge_definition::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    AdkatsChallengeDefinition,
    #[sea_orm(
        belongs_to = "super::tbl_server::Entity",
        from = "Column::ServerId",
        to = "super::tbl_server::Column::ServerId",
        on_update = "Cascade",
        on_delete = "NoAction"
    )]
    TblServer,
    #[sea_orm(has_many = "super::adkats_challenge_entry::Entity")]
    AdkatsChallengeEntry,
}

impl Related<super::adkats_challenge_definition::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AdkatsChallengeDefinition.def()
    }
}

impl Related<super::tbl_server::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblServer.def()
    }
}

impl Related<super::adkats_challenge_entry::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AdkatsChallengeEntry.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
