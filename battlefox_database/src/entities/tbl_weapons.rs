//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "tbl_weapons")]
pub struct Model {
    #[sea_orm(column_name = "WeaponID", primary_key)]
    pub weapon_id: u32,
    #[sea_orm(column_name = "GameID")]
    pub game_id: u8,
    #[sea_orm(column_name = "Friendlyname")]
    pub friendlyname: Option<String>,
    #[sea_orm(column_name = "Fullname")]
    pub fullname: Option<String>,
    #[sea_orm(column_name = "Damagetype")]
    pub damagetype: Option<String>,
    #[sea_orm(column_name = "Slot")]
    pub slot: Option<String>,
    #[sea_orm(column_name = "Kitrestriction")]
    pub kitrestriction: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
