//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "tbl_playerstats")]
pub struct Model {
    #[sea_orm(column_name = "StatsID", primary_key, auto_increment = false)]
    pub stats_id: u32,
    #[sea_orm(column_name = "Score")]
    pub score: i32,
    #[sea_orm(column_name = "Kills")]
    pub kills: u32,
    #[sea_orm(column_name = "Headshots")]
    pub headshots: u32,
    #[sea_orm(column_name = "Deaths")]
    pub deaths: u32,
    #[sea_orm(column_name = "Suicide")]
    pub suicide: u32,
    #[sea_orm(column_name = "TKs")]
    pub t_ks: u32,
    #[sea_orm(column_name = "Playtime")]
    pub playtime: u32,
    #[sea_orm(column_name = "Rounds")]
    pub rounds: u32,
    #[sea_orm(column_name = "FirstSeenOnServer")]
    pub first_seen_on_server: Option<DateTime>,
    #[sea_orm(column_name = "LastSeenOnServer")]
    pub last_seen_on_server: Option<DateTime>,
    #[sea_orm(column_name = "Killstreak")]
    pub killstreak: u16,
    #[sea_orm(column_name = "Deathstreak")]
    pub deathstreak: u16,
    #[sea_orm(
        column_name = "HighScore",
        column_type = "Custom(\"MEDIUMINT(8) UNSIGNED\".to_owned())"
    )]
    pub high_score: String,
    #[sea_orm(column_name = "rankScore")]
    pub rank_score: u32,
    #[sea_orm(column_name = "rankKills")]
    pub rank_kills: u32,
    #[sea_orm(column_name = "Wins")]
    pub wins: u32,
    #[sea_orm(column_name = "Losses")]
    pub losses: u32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_server_player::Entity",
        from = "Column::StatsId",
        to = "super::tbl_server_player::Column::StatsId",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    TblServerPlayer,
}

impl Related<super::tbl_server_player::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblServerPlayer.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
