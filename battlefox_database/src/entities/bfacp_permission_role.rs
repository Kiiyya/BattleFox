//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "bfacp_permission_role")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u32,
    pub permission_id: u32,
    pub role_id: u32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::bfacp_permissions::Entity",
        from = "Column::PermissionId",
        to = "super::bfacp_permissions::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    BfacpPermissions,
    #[sea_orm(
        belongs_to = "super::bfacp_roles::Entity",
        from = "Column::RoleId",
        to = "super::bfacp_roles::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    BfacpRoles,
}

impl Related<super::bfacp_permissions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BfacpPermissions.def()
    }
}

impl Related<super::bfacp_roles::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BfacpRoles.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
