//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "adkats_challenge_definition_detail")]
pub struct Model {
    #[sea_orm(column_name = "DefID", primary_key, auto_increment = false)]
    pub def_id: u32,
    #[sea_orm(column_name = "DetailID", primary_key, auto_increment = false)]
    pub detail_id: u32,
    #[sea_orm(column_name = "Type")]
    pub r#type: String,
    #[sea_orm(column_name = "Damage")]
    pub damage: Option<String>,
    #[sea_orm(column_name = "WeaponCount")]
    pub weapon_count: u32,
    #[sea_orm(column_name = "Weapon")]
    pub weapon: Option<String>,
    #[sea_orm(column_name = "KillCount")]
    pub kill_count: u32,
    #[sea_orm(column_name = "CreateTime")]
    pub create_time: DateTime,
    #[sea_orm(column_name = "ModifyTime")]
    pub modify_time: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::adkats_challenge_definition::Entity",
        from = "Column::DefId",
        to = "super::adkats_challenge_definition::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    AdkatsChallengeDefinition,
}

impl Related<super::adkats_challenge_definition::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AdkatsChallengeDefinition.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
