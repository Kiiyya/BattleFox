//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "adkats_challenge_definition")]
pub struct Model {
    #[sea_orm(column_name = "ID", primary_key)]
    pub id: u32,
    #[sea_orm(column_name = "Name", unique)]
    pub name: String,
    #[sea_orm(column_name = "CreateTime")]
    pub create_time: DateTime,
    #[sea_orm(column_name = "ModifyTime")]
    pub modify_time: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::adkats_challenge_definition_detail::Entity")]
    AdkatsChallengeDefinitionDetail,
    #[sea_orm(has_many = "super::adkats_challenge_rule::Entity")]
    AdkatsChallengeRule,
}

impl Related<super::adkats_challenge_definition_detail::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AdkatsChallengeDefinitionDetail.def()
    }
}

impl Related<super::adkats_challenge_rule::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AdkatsChallengeRule.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
