//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use super::sea_orm_active_enums::BanEnforceGuid;
use super::sea_orm_active_enums::BanEnforceIp;
use super::sea_orm_active_enums::BanEnforceName;
use super::sea_orm_active_enums::BanStatus;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "adkats_bans")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub ban_id: u32,
    #[sea_orm(unique)]
    pub player_id: u32,
    pub latest_record_id: u32,
    pub ban_notes: String,
    pub ban_status: BanStatus,
    #[sea_orm(column_name = "ban_startTime")]
    pub ban_start_time: DateTime,
    #[sea_orm(column_name = "ban_endTime")]
    pub ban_end_time: DateTime,
    #[sea_orm(column_name = "ban_enforceName")]
    pub ban_enforce_name: BanEnforceName,
    #[sea_orm(column_name = "ban_enforceGUID")]
    pub ban_enforce_guid: BanEnforceGuid,
    #[sea_orm(column_name = "ban_enforceIP")]
    pub ban_enforce_ip: BanEnforceIp,
    pub ban_sync: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::adkats_records_main::Entity",
        from = "Column::LatestRecordId",
        to = "super::adkats_records_main::Column::RecordId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    AdkatsRecordsMain,
    #[sea_orm(
        belongs_to = "super::tbl_playerdata::Entity",
        from = "Column::PlayerId",
        to = "super::tbl_playerdata::Column::PlayerId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TblPlayerdata,
}

impl Related<super::adkats_records_main::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AdkatsRecordsMain.def()
    }
}

impl Related<super::tbl_playerdata::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblPlayerdata.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
