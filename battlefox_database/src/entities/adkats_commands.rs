//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use super::sea_orm_active_enums::CommandAccess;
use super::sea_orm_active_enums::CommandActive;
use super::sea_orm_active_enums::CommandLogging;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "adkats_commands")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub command_id: u32,
    pub command_active: CommandActive,
    #[sea_orm(unique)]
    pub command_key: String,
    pub command_logging: CommandLogging,
    pub command_name: String,
    #[sea_orm(unique)]
    pub command_text: String,
    #[sea_orm(column_name = "command_playerInteraction")]
    pub command_player_interaction: i8,
    pub command_access: CommandAccess,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::adkats_rolecommands::Entity")]
    AdkatsRolecommands,
}

impl Related<super::adkats_rolecommands::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AdkatsRolecommands.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
