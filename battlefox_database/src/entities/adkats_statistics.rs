//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "adkats_statistics")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub stat_id: u32,
    pub server_id: u16,
    pub round_id: u32,
    pub stat_type: String,
    pub target_name: String,
    pub target_id: Option<u32>,
    pub stat_value: f32,
    #[sea_orm(column_type = "Text", nullable)]
    pub stat_comment: Option<String>,
    pub stat_time: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_server::Entity",
        from = "Column::ServerId",
        to = "super::tbl_server::Column::ServerId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblServer,
    #[sea_orm(
        belongs_to = "super::tbl_playerdata::Entity",
        from = "Column::TargetId",
        to = "super::tbl_playerdata::Column::PlayerId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblPlayerdata,
}

impl Related<super::tbl_server::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblServer.def()
    }
}

impl Related<super::tbl_playerdata::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblPlayerdata.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
