//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "tbl_chatlog")]
pub struct Model {
    #[sea_orm(column_name = "ID", primary_key)]
    pub id: i32,
    #[sea_orm(column_name = "logDate")]
    pub log_date: Option<DateTime>,
    #[sea_orm(column_name = "ServerID")]
    pub server_id: u16,
    #[sea_orm(column_name = "logSubset")]
    pub log_subset: Option<String>,
    #[sea_orm(column_name = "logSoldierName")]
    pub log_soldier_name: Option<String>,
    #[sea_orm(
        column_name = "logMessage",
        column_type = "Custom(\"MEDIUMTEXT\".to_owned())",
        nullable
    )]
    pub log_message: Option<String>,
    #[sea_orm(column_name = "logPlayerID")]
    pub log_player_id: Option<u32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_playerdata::Entity",
        from = "Column::LogPlayerId",
        to = "super::tbl_playerdata::Column::PlayerId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TblPlayerdata,
}

impl Related<super::tbl_playerdata::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblPlayerdata.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
