//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "battlemanager_userroles")]
pub struct Model {
    #[sea_orm(column_name = "roleId", primary_key, auto_increment = false)]
    pub role_id: i32,
    #[sea_orm(column_name = "userId", primary_key, auto_increment = false)]
    pub user_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::battlemanager_roles::Entity",
        from = "Column::RoleId",
        to = "super::battlemanager_roles::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    BattlemanagerRoles,
    #[sea_orm(
        belongs_to = "super::battlemanager_users::Entity",
        from = "Column::UserId",
        to = "super::battlemanager_users::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    BattlemanagerUsers,
}

impl Related<super::battlemanager_roles::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BattlemanagerRoles.def()
    }
}

impl Related<super::battlemanager_users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BattlemanagerUsers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
